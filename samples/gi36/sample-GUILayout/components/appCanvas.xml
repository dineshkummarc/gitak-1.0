<serialization jsxversion="3.4" xmlns="urn:tibco.com/v3.0">
  <name><![CDATA[Layout (--)]]></name>
  <icon></icon>
  <description><![CDATA[2 top-over-bottom panes in an adaptive layout grid.]]></description>
  <onBeforeDeserialize></onBeforeDeserialize>
  <onAfterDeserialize></onAfterDeserialize>
  <object type="jsx3.gui.LayoutGrid">
    <variants jsxrepeat="2" jsxsizearray="['118','*']" jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2" jsxbestguess="1" jsxorientation="0"></variants>
    <strings jsxname="lytMainLayout" jsxwidth="100%" jsxheight="100%" jsxrows="118,*"></strings>
    <object type="jsx3.gui.Block">
      <variants jsxoverflow="1"></variants>
      <strings jsxname="blkAppDescriptionPane" jsxwidth="100%" jsxheight="100%" jsxtext=" &lt;p align=&quot;right&quot;&gt;&lt;b&gt;GUI Layout; version 2.0.1d&lt;/b&gt;&lt;br/&gt; JSX version: 3.4.0&lt;/p&gt; &lt;p&gt;This sample provides two different application canvases to demonstrate better ways how to layout GI components like blocks, layout, dialog, menus etc., on application screens. &lt;/p&gt;"></strings>
      <dynamics jsxborder="@Outset" jsxpadding="@8Pixel" jsxbgcolor="@Solid Medium"></dynamics>
    </object>
    <object type="jsx3.gui.Block">
      <variants jsxoverflow="1"></variants>
      <strings jsxname="blkLowerPane" jsxwidth="100%" jsxheight="100%"></strings>
      <dynamics jsxborder="@Outset"></dynamics>
      <object type="jsx3.gui.LayoutGrid">
        <variants jsxrepeat="2" jsxsizearray="['80','*']" jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2" jsxbestguess="0" jsxorientation="1"></variants>
        <strings jsxname="lytLowerPaneLayout" jsxwidth="100%" jsxheight="100%" jsxcols="80,*"></strings>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2"></variants>
          <strings jsxname="blkSelectionPane" jsxwidth="100%" jsxheight="100%"></strings>
          <dynamics jsxborder="@Outset"></dynamics>
          <object type="jsx3.gui.Button">
            <variants jsxindex="0" jsxheight="18"></variants>
            <strings jsxname="btnSelectCanvas1" jsxtext="Canvas 1" jsxmargin="margin-top:4px;" jsxwidth="100%" jsxstyleoverride="display: block;"></strings>
            <events jsxexecute="eg.guilayout.loadCanvas(this,&quot;components/appCanvas_1.xml&quot;);"></events>
          </object>
          <object type="jsx3.gui.Button">
            <variants jsxindex="0" jsxheight="18"></variants>
            <strings jsxname="btnSelectCanvas2" jsxtext="Canvas 2" jsxmargin="4 0 0 0" jsxwidth="100%" jsxstyleoverride="display:block;"></strings>
            <events jsxexecute="eg.guilayout.loadCanvas(this,&quot;components/appCanvas_2.xml&quot;);"></events>
          </object>
          <object type="jsx3.gui.Button">
            <variants jsxindex="0" jsxheight="18"></variants>
            <strings jsxname="btnClear" jsxtext="Clear canvas" jsxmargin="4 0 0 0" jsxwidth="100%"></strings>
            <events jsxexecute="this.getServer().getJSXByName('blkContentPane').removeChildren();"></events>
          </object>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="1"></variants>
          <strings jsxname="blkContentPane" jsxwidth="100%" jsxheight="100%"></strings>
          <dynamics jsxborder="@Outset"></dynamics>
        </object>
      </object>
    </object>
  </object>
</serialization>